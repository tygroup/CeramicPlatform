<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop    
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-3.0.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
		 
	 <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
		<!-- 最大连接数  -->
        <property name="maxTotal" value="3000" />
        <!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1-->
        <property name="maxWaitMillis" value="1500" />  
        <!-- 最大空闲连接数 -->
        <property name="maxIdle" value="100" />
        <!-- 每次释放连接的最大数目-->
        <property name="numTestsPerEvictionRun" value="1024" />  
        <!-- 释放连接的扫描间隔（毫秒） -->
        <property name="timeBetweenEvictionRunsMillis" value="30000" /> 
        <!-- 连接最小空闲时间-->
        <property name="minEvictableIdleTimeMillis" value="1800000" />  
        <!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
        <property name="softMinEvictableIdleTimeMillis" value="10000" /> 
     
        <!-- 在获取连接的时候检查有效性, 默认false -->
        <property name="testOnBorrow" value="true" /> 
        <!-- 在空闲时检查有效性, 默认false -->
        <property name="testWhileIdle" value="true" /> 
        <!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
        <property name="blockWhenExhausted" value="false" />
	</bean>   
	<!--  Spring-redis连接池管理工厂 -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
	    p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"  p:pool-config-ref="poolConfig"/> 
	 
	 <!--    使用中间类解决RedisCache.jedisConnectionFactory的静态注入，从而使MyBatis实现第三方缓存 -->
	<bean id="redisCacheTransfer" class="com.cpf.resource.redisCache.RedisCacheTransfer">
	    <property name="jedisConnectionFactory" ref="jedisConnectionFactory"/>
	</bean>  
	
	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate" >   
    	 <property name="connectionFactory" ref="jedisConnectionFactory" />    
    </bean>    
	
	 
</beans>